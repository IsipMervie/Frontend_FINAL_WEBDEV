{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mervi\\\\Downloads\\\\SYSTEM-CLIENT-main\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\"\n    // add other fields here\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  useEffect(() => {\n    // Fetch current user data from the server or local storage\n    const token = localStorage.getItem(\"token\"); // or use context/state management\n    if (token) {\n      fetch(\"http://localhost:4000/user/profile\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        setUser(data); // assuming the response has user data\n      }).catch(error => {\n        setErrorMessage(\"Failed to load profile.\");\n      });\n    }\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:4000/user/edit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(error => {\n          throw new Error(error.message || \"Error updating profile!\");\n        });\n      }\n      return response.json();\n    }).then(data => {\n      if (data.code === \"USER-UPDATED\") {\n        setSuccessMessage(\"Profile updated successfully!\");\n        setTimeout(() => navigate(\"/\"), 2000); // redirect after 2 seconds\n      }\n    }).catch(error => {\n      setErrorMessage(`Failed to update profile: ${error.message}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: user.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: user.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"CtyYqEO5xeIyAwnuwS46SJq0Leo=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Profile","_s","navigate","user","setUser","name","email","errorMessage","setErrorMessage","successMessage","setSuccessMessage","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","catch","error","handleInputChange","e","value","target","prevState","handleSubmit","preventDefault","body","JSON","stringify","ok","Error","message","code","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/mervi/Downloads/SYSTEM-CLIENT-main/SYSTEM-CLIENT-main/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    // add other fields here\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch current user data from the server or local storage\r\n    const token = localStorage.getItem(\"token\"); // or use context/state management\r\n    if (token) {\r\n      fetch(\"http://localhost:4000/user/profile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUser(data); // assuming the response has user data\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(\"Failed to load profile.\");\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    fetch(\"http://localhost:4000/user/edit\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          return response.json().then((error) => {\r\n            throw new Error(error.message || \"Error updating profile!\");\r\n          });\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.code === \"USER-UPDATED\") {\r\n          setSuccessMessage(\"Profile updated successfully!\");\r\n          setTimeout(() => navigate(\"/\"), 2000); // redirect after 2 seconds\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(`Failed to update profile: ${error.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Profile</h1>\r\n      {errorMessage && <div style={{ color: \"red\" }}>{errorMessage}</div>}\r\n      {successMessage && <div style={{ color: \"green\" }}>{successMessage}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={user.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        {/* Add other fields if necessary */}\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}